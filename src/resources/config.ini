[DEFAULT]
storage_location = ${resources_path}/../model_storage

[influx]
bucket = actual_weather_data
limit = 100
debug = false
config = ${resources_path}/influx2.ini

[test_adapter]
dataset = zurich
location = Zch_Stampfenbachstrasse

[normalization]
pm_max = 5000
humidity_max = 150
pressure_min = 800
pressure_max = 1200
temperature_min = -30
temperature_max = 50

[zurich_adapter]
dataset = zurich
;location = Zch_Stampfenbachstrasse,
location = Zch_Stampfenbachstrasse,Zch_Rosengartenstrasse,Zch_Schimmelstrasse
features = Humidity,Temperature,PM10

[preprocessing]
location = Zch_Stampfenbachstrasse
measurements_input = ["Humidity", "Temperature"]
measurements_output = ["PM10"]
measurements_timestamp = ["date"]

[graph_comparison_our_hist_influx]
bucket = actual_weather_data
drops = ["table", "result", "pm4.0", "pm1", "pm2.5", "device"]
limit = 500
debug = false

[graph_comparison_our_hist_hist]
dataset = zurich
location = Zch_Stampfenbachstrasse
features = ["date", "Humidity", "Temperature", "PM10"]

[graph_typical_day]
dataset = zurich
location = Zch_Stampfenbachstrasse
features = ["date", "Humidity", "Temperature", "PM10"]

[influx_measurements]
bucket=actual_weather_data
send_bucket=predictions

[arima]
[autoarima]
[expsmooting]

[lstm]
gap_detection_seconds = 7200
train_window = 10
features_in = ["Humidity", "Temperature", "PM10"]
features_out = ["PM10"]
; set to true when there is an overlap between features_in and features_out
; when false, sequence prediction is not possible
use_offset = false

[lstm_seq]
gap_detection_seconds = 7200
train_window = 20
features_in = ["Humidity", "Temperature", "PM10"]
features_out = ["Humidity", "Temperature", "PM10"]
; set to true when there is an overlap between features_in and features_out
; when false, sequence prediction is not possible
use_offset = true